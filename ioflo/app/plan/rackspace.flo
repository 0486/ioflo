# Salt Auto Scaling FloScript

house autoscale  

init salt.autoscale.pool.m1.mid to value "ioflominion_1" 
init salt.autoscale.pool.m1.status to value yes
init salt.autoscale.pool.m2.mid to value "ioflominion_2" 
init salt.autoscale.pool.m2.status to value yes
init salt.autoscale.pool.m3.mid to value "ioflominion_3" 
init salt.autoscale.pool.m3.status to value yes
init salt.autoscale.pool.m4.mid to value "ioflominion_4" 
init salt.autoscale.pool.m4.status to value yes
init salt.autoscale.pool.m5.mid to value "ioflominion_5" 
init salt.autoscale.pool.m5.status to value yes

init salt.autoscale.limit to high 0.2  low 0.1



framer eventer be active first start
   frame start
      do salt eventer

framer autoscaler be active first startup at 1.0
   frame safety
      do salt bosser pool ping
      go abort if .time >= 3600
   
      frame startup in safety # wait 6 seconds to verify all on poolees are healthy
         set elapsed to 6
         go prep if .salt.autoscale.status.healthy
         go abort if elapsed >= goal and not .salt.autoscale.status.healthy
      
      frame autoscale in safety
         go abort if not .salt.autoscale.status.healthy
   
         frame compute in autoscale
            do salt bosser pool numcpu
            do salt bosser pool loadavg
            do salt pooler overload
            
            frame prep in compute
               print PREPPING
               go check if elapsed >= 3
         
            frame check in compute
               enter
                  do salt pooler change # determines createe and destroyee mids
               go scaleup if .salt.autoscale.status.overload >= high in .salt.autoscale.limit
               go scaledown if .salt.autoscale.status.overload <= low in .salt.autoscale.limit
            
         frame scaleup in autoscale
            print SCALE UP HERE
            aux creator
            go wait if done creator
            
         frame scaledown in autoscale
            print SCALE DOWN HERE
            aux destroyer
            go wait if done destroyer
         
         frame wait in autoscale
            print WAITING
            go compute if elapsed >= 20
      
   frame abort
      bid stop all

framer creator be aux first start at 1.0
   frame start
      go next if .salt.autoscale.status.createe
      go done
      
   frame create
      print CREATING
      enter
         do salt runner cloud create
      go next
   
   frame wait
      do salt chaser cloud create
      go done if .salt.chaser.cloud.create.success
      go timedout if elapsed >= 600.0
      
   frame timedout
      print TIMED OUT CREATING
      done
      
   frame done
      print CREATED
      done

      
framer destroyer be aux first start at 1.0
   frame start
      go next if .salt.autoscale.status.destroyee
      go done
      
   frame destroy
      print DESTROYING
      enter
         do salt runner cloud destroy
      go next
   
   frame wait
      do salt chaser cloud destroy
      go done if .salt.chaser.cloud.destroy.success
      go done if elapsed >= 10.0
   
   frame timedout
      print TIMED OUT DESTROYING
      done
      
   frame done
      print DESTROYED
      done

logger logger to ../log/ flush 1
   log autoscale to autoscale on update
      loggee overload salt.autoscale.status.overload
      loggee count salt.autoscale.status.count
      loggee healthy salt.autoscale.status.healthy
      loggee deadCount salt.autoscale.status.deadCount
      loggee destroyee salt.autoscale.status.destroyee
      loggee createe salt.autoscale.status.createe
      
   log overload to overload on change
      loggee m1 salt.autoscale.pool.m1.overload
      loggee m2 salt.autoscale.pool.m2.overload
      loggee m3 salt.autoscale.pool.m3.overload
      loggee m4 salt.autoscale.pool.m4.overload
      loggee m5 salt.autoscale.pool.m5.overload
   
   log numcpu to numcpu on change
      loggee m1 salt.autoscale.pool.m1.numcpu
      loggee m2 salt.autoscale.pool.m2.numcpu
      loggee m3 salt.autoscale.pool.m3.numcpu
      loggee m4 salt.autoscale.pool.m4.numcpu
      loggee m5 salt.autoscale.pool.m5.numcpu
      
   log loadavg to loadavg on change
      loggee m1 salt.autoscale.pool.m1.loadavg
      loggee m2 salt.autoscale.pool.m2.loadavg
      loggee m3 salt.autoscale.pool.m3.loadavg
      loggee m4 salt.autoscale.pool.m4.loadavg
      loggee m5 salt.autoscale.pool.m5.loadavg
      
   log alive to alive on change
      loggee m1 salt.autoscale.pool.m1.alive
      loggee m2 salt.autoscale.pool.m2.alive
      loggee m3 salt.autoscale.pool.m3.alive
      loggee m4 salt.autoscale.pool.m4.alive
      loggee m5 salt.autoscale.pool.m5.alive
      
   log status to status on change
      loggee m1 salt.autoscale.pool.m1.status
      loggee m2 salt.autoscale.pool.m2.status
      loggee m3 salt.autoscale.pool.m3.status
      loggee m4 salt.autoscale.pool.m4.status
      loggee m5 salt.autoscale.pool.m5.status
      
   log event to event on fifo
      loggee event salt.eventer.event
      