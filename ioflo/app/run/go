#!/usr/bin/python
"""go
   runs ioflo plan from command line shell

"""
import argparse

if __name__ == "__main__":
    """ Processes command line arguments and then runs ioflo

        Invoke with '-h' command line option to get usage string
    """
    d = "Runs ioflo. "
    d += "Example: python go -f filename -p period -v level -r -h -b 'mybehaviors.py'\n"
    p = argparse.ArgumentParser(description = d)
    p.add_argument('-v','--verbose',
            action='store', 
            default='2',
            choices=['0', '1', '2', '3', '4'],
            help="Verbosity level.")
    p.add_argument('-p','--period',
            action = 'store',
            default='0.125',
            help = "Period per skedder run in seconds.")
    p.add_argument('-r','--realtime',
            action='store_const',
            const=True, 
            default = False,
            help = "Run skedder at realtime.")
    p.add_argument('-n','--name',
            action='store', 
            default = 'Skedder',
            help = "Skedder name.")    
    p.add_argument('-f','--filename',
            action = 'store',
            default = '../plan/box1.flo',
            help = "File path to FloScript file.")
    p.add_argument('-b','--behavior',
            action = 'store',
            default = '',
            help = "File path to external behavior package.")
    p.add_argument('-U','--username',
            action = 'store',
            default = '',
            help = "Username.")
    p.add_argument('-P','--password',
            action = 'store',
            default = '',
            help = "Password.")
    args = p.parse_args()
    
    # absolute import since command line
    from ioflo.app.run import Run

    Run(name=args.name,
        filename = args.filename,
        period = float(args.period), 
        verbose = int(args.verbose),
        realtime = args.realtime,
        behavior=args.behavior,
        username=args.username,
        password=args.password, )
    
    